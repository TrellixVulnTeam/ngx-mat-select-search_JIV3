import { EventEmitter, Directive, NgZone, Input, Output, NgModule } from '@angular/core';
import { SELECT_ITEM_HEIGHT_EM, MatSelect, MatSelectModule } from '@angular/material/select';
import { takeUntil, debounceTime, tap } from 'rxjs/operators';
import { Subject, fromEvent } from 'rxjs';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MatSelectInfiniteScrollDirective = /** @class */ (function () {
    function MatSelectInfiniteScrollDirective(matSelect, ngZone) {
        this.matSelect = matSelect;
        this.ngZone = ngZone;
        this.threshold = '15%';
        this.debounceTime = 150;
        this.infiniteScroll = new EventEmitter();
        this.thrPx = 0;
        this.thrPc = 0;
        this.singleOptionHeight = SELECT_ITEM_HEIGHT_EM;
        this.destroyed$ = new Subject();
    }
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.evaluateThreshold();
    };
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.matSelect.openedChange.pipe(takeUntil(this.destroyed$)).subscribe((/**
         * @param {?} opened
         * @return {?}
         */
        function (opened) {
            if (opened) {
                _this.panel = _this.matSelect.panel.nativeElement;
                _this.singleOptionHeight = _this.getSelectItemHeightPx();
                _this.registerScrollListener();
            }
        }));
    };
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroyed$.next(true);
        this.destroyed$.complete();
    };
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.evaluateThreshold = /**
     * @return {?}
     */
    function () {
        if (this.threshold.lastIndexOf('%') > -1) {
            this.thrPx = 0;
            this.thrPc = (parseFloat(this.threshold) / 100);
        }
        else {
            this.thrPx = parseFloat(this.threshold);
            this.thrPc = 0;
        }
    };
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.registerScrollListener = /**
     * @return {?}
     */
    function () {
        var _this = this;
        fromEvent(this.panel, 'scroll').pipe(takeUntil(this.destroyed$), debounceTime(this.debounceTime), tap((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.handleScrollEvent(event);
        }))).subscribe();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.handleScrollEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            if (_this.complete) {
                return;
            }
            /** @type {?} */
            var countOfRenderedOptions = _this.matSelect.options.length;
            /** @type {?} */
            var infiniteScrollDistance = _this.singleOptionHeight * countOfRenderedOptions;
            /** @type {?} */
            var threshold = _this.thrPc !== 0 ? (infiniteScrollDistance * _this.thrPc) : _this.thrPx;
            /** @type {?} */
            var scrolledDistance = _this.panel.clientHeight + event.target.scrollTop;
            if ((scrolledDistance + threshold) >= infiniteScrollDistance) {
                _this.ngZone.run((/**
                 * @return {?}
                 */
                function () { return _this.infiniteScroll.emit(); }));
            }
        }));
    };
    /**
     * @return {?}
     */
    MatSelectInfiniteScrollDirective.prototype.getSelectItemHeightPx = /**
     * @return {?}
     */
    function () {
        return parseFloat(getComputedStyle(this.panel).fontSize) * SELECT_ITEM_HEIGHT_EM;
    };
    MatSelectInfiniteScrollDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[msInfiniteScroll]'
                },] }
    ];
    /** @nocollapse */
    MatSelectInfiniteScrollDirective.ctorParameters = function () { return [
        { type: MatSelect },
        { type: NgZone }
    ]; };
    MatSelectInfiniteScrollDirective.propDecorators = {
        threshold: [{ type: Input }],
        debounceTime: [{ type: Input }],
        complete: [{ type: Input }],
        infiniteScroll: [{ type: Output }]
    };
    return MatSelectInfiniteScrollDirective;
}());
if (false) {
    /** @type {?} */
    MatSelectInfiniteScrollDirective.prototype.threshold;
    /** @type {?} */
    MatSelectInfiniteScrollDirective.prototype.debounceTime;
    /** @type {?} */
    MatSelectInfiniteScrollDirective.prototype.complete;
    /** @type {?} */
    MatSelectInfiniteScrollDirective.prototype.infiniteScroll;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.panel;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.thrPx;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.thrPc;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.singleOptionHeight;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.destroyed$;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.matSelect;
    /**
     * @type {?}
     * @private
     */
    MatSelectInfiniteScrollDirective.prototype.ngZone;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var MatSelectInfiniteScrollModule = /** @class */ (function () {
    function MatSelectInfiniteScrollModule() {
    }
    MatSelectInfiniteScrollModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [MatSelectInfiniteScrollDirective],
                    imports: [
                        MatSelectModule
                    ],
                    exports: [MatSelectInfiniteScrollDirective]
                },] }
    ];
    return MatSelectInfiniteScrollModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MatSelectInfiniteScrollDirective, MatSelectInfiniteScrollModule };
//# sourceMappingURL=ng-mat-select-infinite-scroll.js.map
